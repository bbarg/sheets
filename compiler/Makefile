OBJS = ast.cmo parser.cmo scanner.cmo generator.cmo
# print_ast.cmo

generator : $(OBJS)
	ocamlc -o generator $(OBJS)

# print_ast : $(OBJS)
# 	ocamlc -o print_ast $(OBJS)

.PHONY : test
test : microc testall.sh
	./testall.sh

scanner.ml : scanner.mll
	ocamllex scanner.mll

parser.ml parser.mli : parser.mly
	ocamlyacc parser.mly

%.cmo : %.ml
	ocamlc -w A -c $<

%.cmi : %.mli
	ocamlc -w A -c $<

.PHONY : clean
clean :
	rm -f microc parser.ml parser.mli scanner.ml testall.log \
	*.cmo *.cmi *.out *.diff

# Generated by ocamldep *.ml *.mli
ast.cmo :
ast.cmx :
generator.cmo : scanner.cmo parser.cmi ast.cmo
generator.cmx : scanner.cmx parser.cmx ast.cmx
parser.cmo : ast.cmo parser.cmi
parser.cmx : ast.cmx parser.cmi
print_ast.cmo : scanner.cmo parser.cmi ast.cmo
print_ast.cmx : scanner.cmx parser.cmx ast.cmx
scanner.cmo : parser.cmi
scanner.cmx : parser.cmx
parser.cmi : ast.cmo
